simple factory pattern sum-up:
一、简单工厂用来实现类与调用实现解耦
二、对实现类封装，对外提供工厂和实现类的接口类型(使用工厂获取实例，使用接口类型调用方法，从而实现解耦)
三、可以使用配置文件的方法，通过反射生成实例从而解决新增实现类时需要改动工厂类的问题(或者IOC/DI解决)

facade pattern sum-up
一、封装了子系统
二、简化调用，只需要和facade交互
三、分层设计时可以考虑facade